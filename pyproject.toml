[project]
name = "kioto"
version = "0.1.0"
description = "Async utilities library inspired by Tokio"
authors = ["Brandon Ogle <oglebrandon@gmail.com>"]
requires-python = ">=3.8"

# Runtime Dependencies
dependencies = [
]

# Developer Dependencies
[project.optional-dependencies]
dev = [
    "ruff",     # Fast linter and formatter
    "mypy",     # Static type checker
    "pytest",   # Testing framework
    "pytest-asyncio",  # Asynchronous support for pytest
]

# Tool Configurations

[tool.ruff]
exclude = [
   ".git",
   ".env"
]

line-length = 90
indent-width = 4

# Assume python version
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
# Enable strict type checking to enforce rigorous type annotations
strict = true

[tool.pytest.ini_options]
# Define the directories where pytest should look for tests
testpaths = ["tests"]
